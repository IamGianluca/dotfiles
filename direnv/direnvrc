# Import all of direnv's built-in helpers (solves the log-error)
eval "$(direnv stdlib)"

layout_uv() {
    if [[ ! -f pyproject.toml ]]; then
        log_error 'No pyproject.toml found. Use `uv init` to create one first.'
        exit 2
    fi
    
    local venv_path="$(pwd)/.venv"
    if [[ ! -d "$venv_path" ]]; then
        log_status "No virtual environment exists. Executing \`uv venv\` to create one."
        if ! uv venv; then
            log_error "Failed to create virtual environment with uv"
            exit 2
        fi
    fi
    
    if [[ ! -d "$venv_path" ]]; then
        log_error "Virtual environment directory not found: $venv_path"
        exit 2
    fi
    
    export VIRTUAL_ENV="$venv_path"
    export UV_ACTIVE=1
    PATH_add "$VIRTUAL_ENV/bin"
    
    log_success "Activated uv virtual environment: $venv_path"
}

layout_poetry() {
    if [[ ! -f pyproject.toml ]]; then
        log_error 'No pyproject.toml found. Use `poetry new` or `poetry init` to create one first.'
        exit 2
    fi
    
    local venv_path=$(poetry env info --path 2>/dev/null)
    if [[ -z $venv_path || ! -d $venv_path ]]; then
        log_error 'No poetry virtual environment found. Use `poetry install` to create one first.'
        exit 2
    fi
    
    export VIRTUAL_ENV="$venv_path"
    export POETRY_ACTIVE=1
    PATH_add "$venv_path/bin"
    
    log_success "Activated Poetry virtual environment: $venv_path"
}

# just to check later, if this file was indeed sourced
export footest="This is sourced"
